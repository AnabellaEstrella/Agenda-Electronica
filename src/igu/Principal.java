/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package igu;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author AnabellaBlanco
 */
public class Principal extends javax.swing.JFrame {

    // Inicializo los vectores y el índice
    String[] vectorDni = new String[10];
    String[] vectorNombres = new String[10];
    String[] vectorApellidos = new String[10];
    String[] vectorDirecciones = new String[10];
    String[] vectorTelefonos = new String[10];
    String[] vectorFechaNac = new String[10];
    int indice = 0;

    public Principal() {
        initComponents();

        // Inicializo en 0 el textField que muestra el índice actual
        txtIndice.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        separador1 = new javax.swing.JSeparator();
        lblDni = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        separador2 = new javax.swing.JSeparator();
        btnGrabar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        lblIndice = new javax.swing.JLabel();
        txtIndice = new javax.swing.JTextField();
        txtFechaNac = new javax.swing.JFormattedTextField();
        txtDni = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(218, 128, 158));
        jPanel1.setForeground(new java.awt.Color(218, 128, 158));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(209, 248, 225));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Agenda Electrónica");

        lblDni.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblDni.setForeground(new java.awt.Color(231, 252, 235));
        lblDni.setText("DNI:");

        lblNombre.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(231, 252, 235));
        lblNombre.setText("Nombre:");

        lblApellido.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblApellido.setForeground(new java.awt.Color(231, 252, 235));
        lblApellido.setText("Apellido:");

        lblTelefono.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblTelefono.setForeground(new java.awt.Color(231, 252, 235));
        lblTelefono.setText("Teléfono:");

        lblDireccion.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblDireccion.setForeground(new java.awt.Color(231, 252, 235));
        lblDireccion.setText("Dirección:");

        lblFechaNac.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblFechaNac.setForeground(new java.awt.Color(231, 252, 235));
        lblFechaNac.setText("F. de Nacimiento:");

        btnGrabar.setBackground(new java.awt.Color(240, 206, 204));
        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnSiguiente.setBackground(new java.awt.Color(240, 206, 204));
        btnSiguiente.setText(">>");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAnterior.setBackground(new java.awt.Color(240, 206, 204));
        btnAnterior.setText("<<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        lblIndice.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lblIndice.setForeground(new java.awt.Color(209, 248, 225));
        lblIndice.setText("Índice:");

        txtIndice.setEditable(false);
        txtIndice.setBackground(new java.awt.Color(255, 255, 255));
        txtIndice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIndice.setFocusable(false);

        try {
            txtFechaNac.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFechaNac.setToolTipText("");
        txtFechaNac.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtFechaNac.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        txtFechaNac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaNacFocusGained(evt);
            }
        });

        txtDni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtDni.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(separador2)
                            .addComponent(separador1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNombre)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblDni)
                                                .addGap(40, 40, 40))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblApellido)
                                                .addGap(9, 9, 9)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtApellido)
                                            .addComponent(txtDni, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDireccion)
                                    .addComponent(lblFechaNac)
                                    .addComponent(lblTelefono))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDireccion)
                                    .addComponent(txtTelefono)
                                    .addComponent(txtFechaNac, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblIndice)
                                .addGap(18, 18, 18)
                                .addComponent(txtIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(303, 303, 303))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAnterior)
                                .addGap(18, 18, 18)
                                .addComponent(btnGrabar)
                                .addGap(18, 18, 18)
                                .addComponent(btnSiguiente)
                                .addGap(267, 267, 267))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDni)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblTelefono)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(lblFechaNac)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIndice)
                    .addComponent(txtIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // Verifico que la posición actual sea mayor a 0 para continuar decrementando el índice
        if (indice > 0) {
            indice--;
            // Convierto el índice en String y se lo paso al textField
            txtIndice.setText(Integer.toString(indice));
        }

        // Seteo cada textField con el valor del vector correspondiente en el índice actual para que se muestre la información al navegar por los distintos índices
        txtDni.setText(vectorDni[indice]);
        txtNombre.setText(vectorNombres[indice]);
        txtApellido.setText(vectorApellidos[indice]);
        txtDireccion.setText(vectorDirecciones[indice]);
        txtTelefono.setText(vectorTelefonos[indice]);
        txtFechaNac.setText(vectorFechaNac[indice]);
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        /* Serie de validaciones para poder grabar los datos de una persona en el índice actual.
        En todos los casos, si hay un error que impide la grabación se muestra un pop up indicando que campo tiene el error. */
        
        /* Valido que se completen todos los campos para poder grabar los datos de una persona.
        En el caso de Fecha de Nacimiento debo preguntar teniendo en cuenta el formato ##/##/#### de la máscara. Debido a esto, ese textField nunca esta vacío realmente. */
        if (txtDni.getText().isEmpty() || txtNombre.getText().isEmpty() || txtApellido.getText().isEmpty() || txtDireccion.getText().isEmpty() || txtTelefono.getText().isEmpty() || txtFechaNac.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(null,
                    "Información faltante. Por favor, complete todos los campos.");
        }
        // Valido con ReGex que se ingresen solo letras. El nombre puede tener como formato "Nombre" o "Nombre1 Nombre2".
        else if (!txtNombre.getText().isEmpty() && !txtNombre.getText().matches("^[a-zA-Z]+\\s*[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null,
                    "Nombre inválido. Por favor, intente nuevamente.");
        }
        // Valido con ReGex que se ingresen solo letras. El apellido puede tener como formato "Apellido" o "Apellido1 Apellido2".
        else if (!txtApellido.getText().isEmpty() && !txtApellido.getText().matches("^[a-zA-Z]+\\s*[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null,
                    "Apellido inválido. Por favor, intente nuevamente.");
        }
        // Valido con ReGex el formato del DNI. Esto es necesario porque el label de DNI en la interfaz es de tipo number, y por eso manda el DNI con puntos.
        else if (!txtDni.getText().isEmpty() && !txtDni.getText().matches("^\\d{1,2}\\.\\d{3}\\.\\d{3}$")) {
            JOptionPane.showMessageDialog(null,
                    "DNI inválido. Intente nuevamente.");
        }
        // Valido con ReGex el formato del teléfono. Además de números, admite otros símbolos que puede tener un télefono, como espacios, paréntesis, guiones y el signo '+'.
        else if (!txtTelefono.getText().isEmpty() && !txtTelefono.getText().matches("^[\\d\\-\\+\\s\\(\\)]+$")) {
            JOptionPane.showMessageDialog(null,
                    "Teléfono inválido. Por favor, intente nuevamente.");
        }
        else {
            // Valido con ReGex que el formato de la fecha sea dd/MM/yyyy. Esto es necesario por la máscara agregada en la interfaz.
            if (txtFechaNac.getText().matches("\\d{2}\\/\\d{2}\\/\\d{4}")) {
                // Utilizo SimpleDateFormat para asegurarme que además de cumplir con el formato, la fecha sea válida.
                SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy");
                fecha.setLenient(false);
                try {
                    fecha.parse(txtFechaNac.getText());
                    
                    // Si el parseo no arroja una excepción, obtengo los datos de cada textField y lo asigno a su correspondiente vector en la posición actual
                    vectorDni[indice] = txtDni.getText();
                    vectorNombres[indice] = txtNombre.getText();
                    vectorApellidos[indice] = txtApellido.getText();
                    vectorDirecciones[indice] = txtDireccion.getText();
                    vectorTelefonos[indice] = txtTelefono.getText();
                    vectorFechaNac[indice] = txtFechaNac.getText();
                }
                catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null,
                        "La fecha de nacimiento ingresada no es válida. Por favor, intente nuevamente.");
                }
            }
            else {
                JOptionPane.showMessageDialog(null,
                        "El formato de la fecha de nacimiento no es válido. Por favor, intente nuevamente.");
            }
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // Verifico que la posición actual sea menor a 9 para continuar incrementando el índice
        if (indice < 9) {
            indice++;
            // Convierto el índice en String y se lo paso al textField
            txtIndice.setText(Integer.toString(indice));
        }

        // Seteo cada textField con el valor del índice actual para que se muestre la información al navegar por los distintos índices
        txtDni.setText(vectorDni[indice]);
        txtNombre.setText(vectorNombres[indice]);
        txtApellido.setText(vectorApellidos[indice]);
        txtDireccion.setText(vectorDirecciones[indice]);
        txtTelefono.setText(vectorTelefonos[indice]);
        txtFechaNac.setText(vectorFechaNac[indice]);
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtFechaNacFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaNacFocusGained
        /* Hago que el cursor se posicione al principio siempre que el textField Fecha de Nacimiento tenga el foco y no se haya ingresado ningún valor aún.
        Sin esta verificación, el cursor se posicionaba al final al hacer foco con el mouse antes de lograr ingresar algo
        debido a la máscara de fecha, y era necesario moverse hasta el principio con el teclado. */
        if (txtFechaNac.getText().equals("  /  /    ")) {
            txtFechaNac.setCaretPosition(0);
        }
    }//GEN-LAST:event_txtFechaNacFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblIndice;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JSeparator separador1;
    private javax.swing.JSeparator separador2;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JFormattedTextField txtDni;
    private javax.swing.JFormattedTextField txtFechaNac;
    private javax.swing.JTextField txtIndice;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
